// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.ComponentModel;

namespace ApplicationCore.Models.AppInsights.Metrics
{
    /// <summary> The MetricsSegment. </summary>
    public readonly partial struct MetricsSegment : IEquatable<MetricsSegment>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="MetricsSegment"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public MetricsSegment(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string ApplicationBuildValue = "applicationBuild";
        private const string ApplicationVersionValue = "applicationVersion";
        private const string AuthenticatedOrAnonymousTrafficValue = "authenticatedOrAnonymousTraffic";
        private const string BrowserValue = "browser";
        private const string BrowserVersionValue = "browserVersion";
        private const string CityValue = "city";
        private const string CloudRoleNameValue = "cloudRoleName";
        private const string CloudServiceNameValue = "cloudServiceName";
        private const string ContinentValue = "continent";
        private const string CountryOrRegionValue = "countryOrRegion";
        private const string DeploymentIdValue = "deploymentId";
        private const string DeploymentUnitValue = "deploymentUnit";
        private const string DeviceTypeValue = "deviceType";
        private const string EnvironmentValue = "environment";
        private const string HostingLocationValue = "hostingLocation";
        private const string InstanceNameValue = "instanceName";

        /// <summary> applicationBuild. </summary>
        public static MetricsSegment ApplicationBuild { get; } = new MetricsSegment(ApplicationBuildValue);
        /// <summary> applicationVersion. </summary>
        public static MetricsSegment ApplicationVersion { get; } = new MetricsSegment(ApplicationVersionValue);
        /// <summary> authenticatedOrAnonymousTraffic. </summary>
        public static MetricsSegment AuthenticatedOrAnonymousTraffic { get; } = new MetricsSegment(AuthenticatedOrAnonymousTrafficValue);
        /// <summary> browser. </summary>
        public static MetricsSegment Browser { get; } = new MetricsSegment(BrowserValue);
        /// <summary> browserVersion. </summary>
        public static MetricsSegment BrowserVersion { get; } = new MetricsSegment(BrowserVersionValue);
        /// <summary> city. </summary>
        public static MetricsSegment City { get; } = new MetricsSegment(CityValue);
        /// <summary> cloudRoleName. </summary>
        public static MetricsSegment CloudRoleName { get; } = new MetricsSegment(CloudRoleNameValue);
        /// <summary> cloudServiceName. </summary>
        public static MetricsSegment CloudServiceName { get; } = new MetricsSegment(CloudServiceNameValue);
        /// <summary> continent. </summary>
        public static MetricsSegment Continent { get; } = new MetricsSegment(ContinentValue);
        /// <summary> countryOrRegion. </summary>
        public static MetricsSegment CountryOrRegion { get; } = new MetricsSegment(CountryOrRegionValue);
        /// <summary> deploymentId. </summary>
        public static MetricsSegment DeploymentId { get; } = new MetricsSegment(DeploymentIdValue);
        /// <summary> deploymentUnit. </summary>
        public static MetricsSegment DeploymentUnit { get; } = new MetricsSegment(DeploymentUnitValue);
        /// <summary> deviceType. </summary>
        public static MetricsSegment DeviceType { get; } = new MetricsSegment(DeviceTypeValue);
        /// <summary> environment. </summary>
        public static MetricsSegment Environment { get; } = new MetricsSegment(EnvironmentValue);
        /// <summary> hostingLocation. </summary>
        public static MetricsSegment HostingLocation { get; } = new MetricsSegment(HostingLocationValue);
        /// <summary> instanceName. </summary>
        public static MetricsSegment InstanceName { get; } = new MetricsSegment(InstanceNameValue);
        /// <summary> Determines if two <see cref="MetricsSegment"/> values are the same. </summary>
        public static bool operator ==(MetricsSegment left, MetricsSegment right) => left.Equals(right);
        /// <summary> Determines if two <see cref="MetricsSegment"/> values are not the same. </summary>
        public static bool operator !=(MetricsSegment left, MetricsSegment right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="MetricsSegment"/>. </summary>
        public static implicit operator MetricsSegment(string value) => new MetricsSegment(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is MetricsSegment other && Equals(other);
        /// <inheritdoc />
        public bool Equals(MetricsSegment other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
